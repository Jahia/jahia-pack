name: Full CI Workflow

env:
  PARENT_IMAGE_TAG: "none"
  TARGET_BRANCH: ""

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  schedule:
    - cron: '0 4,10,16 * * 1-5'
  push:
    branches:
      - master
      - 'feature-.*'
      - 'JAHIA-[0-9]-[0-9]-[0-9]-X-BRANCH'
  workflow_dispatch:
    inputs:
      parent_image_tag:
        description: "Tag used by the parent build, 'none' indicates the build has not been triggered from another repository"
      target_branch:
        description: 'Target branch for the build step'
  workflow_call:
    inputs:
      parent_image_tag:
        description: "Tag used by the parent build, 'none' indicates the build has not been triggered from another repository"
        type: string
      target_branch:
        description: 'Target branch for the build step'
        type: string
      workflows-ref:
        description: "ref of the centralized workflows repo that was specified in 'jobs.<name>.uses'"
        required: true
        type: string

jobs:
  # This trick is necessary to be able to join key variables from all workflow triggers (pr, push, dispatch...)
  # Using a dedicated job is overkill but has the advantage of clearly separating the logic of setting up these variables
  vars:
    name: Set up environment variables
    runs-on: ubuntu-latest
    outputs:
      parent_image_tag: ${{ steps.vars.outputs.parent_image_tag }}
      target_branch: ${{ steps.vars.outputs.target_branch }}
    steps:
      - name: Set environment variables from either input parameters or default env
        shell: bash
        run: |
          INPUT_PARENT_IMAGE_TAG=${{ inputs.parent_image_tag }}
          echo "ENV_PARENT_IMAGE_TAG=${INPUT_PARENT_IMAGE_TAG:-${{ env.PARENT_IMAGE_TAG }}}" >> $GITHUB_ENV
          INPUT_TARGET_BRANCH=${{ inputs.target_branch }}
          echo "ENV_TARGET_BRANCH=${INPUT_TARGET_BRANCH:-${{ env.TARGET_BRANCH }}}" >> $GITHUB_ENV
      - id: vars
        name: Set output variables
        shell: bash
        run: |
          echo "::set-output name=parent_image_tag::`echo ${ENV_PARENT_IMAGE_TAG}`"
          echo "::set-output name=target_branch::`echo ${ENV_TARGET_BRANCH}`"
      - name: Display output variables
        shell: bash
        run: |
          echo "ENV_PARENT_IMAGE_TAG = ${ENV_PARENT_IMAGE_TAG}"
          echo "ENV_TARGET_BRANCH = ${ENV_TARGET_BRANCH}"
          echo "steps.vars.outputs.parent_image_tag = ${{ steps.vars.outputs.parent_image_tag}}"
          echo "steps.vars.outputs.target_branch = ${{ steps.vars.outputs.target_branch}}"

  build:
    runs-on: ubuntu-latest
    needs: vars
    outputs:
      jahia_version: ${{ steps.tags.outputs.jahia_version }}
      image_tag: ${{ steps.tags.outputs.image_tag }}
      parent_tag: ${{ steps.tags.outputs.parent_tag }}
      current_branch: ${{ steps.tags.outputs.current_branch }}
      triggered_by: ${{ steps.tags.outputs.triggered_by }}
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4.6.0
        with:
          java-version: 11
          distribution: zulu
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.vars.outputs.target_branch }}
          repository: Jahia/jahia-pack-private
          path: jahia-pack-repo
          token: ${{ secrets.GH_API_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      # Artifacts are saved via the cache mechanism to save time
      - name: Save/Restore build artifacts from cache
        uses: actions/cache@v4
        with:
          key: run-${{ github.run_id }}
          path: |
            jahia-pack-repo/jahia-installer-package/target/Jahia-*Distribution*
            ${{ github.workspace }}/jahia-pack-repo/artifacts/*
            jahia-pack-repo/image.tar
            jahia-pack-repo/image.tag
      - name: Set environment variables from parameters
        shell: bash
        run: |
          echo "NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_PACKAGES_USERNAME }}
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - name: Store project version
        shell: bash
        run: |
          pwd
          cd jahia-pack-repo
          mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec > jahia.version
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8
      - name: Determine tag
        shell: bash
        run: |
          cd jahia-pack-repo
          echo "Parent tag: ${{ needs.vars.outputs.parent_image_tag }}"
          echo "Jahia Version: `cat jahia.version`"
          if [ "${{ needs.vars.outputs.parent_image_tag }}" = "none" ]; then
            cp jahia.version parent.tag
            if [ "${{ github.event_name }}" != "pull_request" ]; then
              cp jahia.version image.tag
            else
              echo `cat jahia.version`-"${{ steps.branch-name.outputs.current_branch }}" > image.tag
            fi
            echo "Jahia/jahia-pack-private" > triggered_by.repo
          else
            echo "${{ needs.vars.outputs.parent_image_tag }}" > parent.tag
            cp parent.tag image.tag
            echo "Jahia/jahia-private" > triggered_by.repo
          fi
          echo "Parent tag: `cat parent.tag`"
          echo "Image tag: `cat image.tag`"
          echo "Triggered by repo: `cat triggered_by.repo`"
      - id: tags
        name: Set Output variables
        run: |
          cd jahia-pack-repo
          jahia_version=$(cat jahia.version)
          echo "jahia_version=${jahia_version}" >> $GITHUB_OUTPUT
          image_tag=$(cat image.tag)
          echo "image_tag=${image_tag}" >> $GITHUB_OUTPUT
          parent_tag=$(cat parent.tag)
          echo "parent_tag=${parent_tag}" >> $GITHUB_OUTPUT
          triggered_by=$(cat triggered_by.repo)
          echo "triggered_by=${triggered_by}" >> $GITHUB_OUTPUT
          echo "current_branch=${{ steps.branch-name.outputs.current_branch}}" >> $GITHUB_OUTPUT
      - name: Display Output variables
        run: |
          echo "OUTPUT: jahia_version = ${{steps.tags.outputs.jahia_version}}"
          echo "OUTPUT: image_tag = ${{steps.tags.outputs.image_tag}}"
          echo "OUTPUT: parent_tag = ${{steps.tags.outputs.parent_tag}}"
          echo "OUTPUT: triggered_by = ${{steps.tags.outputs.triggered_by}}"

      - name: mvn clean deploy
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: |
          cd jahia-pack-repo
          mvn -U -ntp -s .github/maven.settings.xml -U -e \
              -Dparent.tag=`cat parent.tag` \
              -Dimage.tag=`cat image.tag` \
              clean deploy \
              -Pdocker,docker-plugin,installer,windows-installer
      - name: Generate Docker shorthand tags
        uses: fgerthoffert/actions-docker-shorthand-tags@main
        if: ${{ github.event_name != 'pull_request' }}
        with:
          src_registry: github
          src_repository: jahia/jahia-opencore-dev
          src_username: ${{ secrets.GH_PACKAGES_USERNAME }}
          src_secret: ${{ secrets.GH_PACKAGES_TOKEN }}
          dst_registry: github
          dst_repository: jahia/jahia-opencore-dev
          dst_username: ${{ secrets.GH_PACKAGES_USERNAME }}
          dst_secret: ${{ secrets.GH_PACKAGES_TOKEN }}
          dry_run: false

      # Series of steps only executed when in a PR
      - name: mvn clean install
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          cd jahia-pack-repo
          mvn -U -ntp -s .github/maven.settings.xml -U -e \
            -Dparent.tag=${{steps.tags.outputs.parent_tag}} \
            -Dimage.tag=${{steps.tags.outputs.image_tag}} \
            clean install \
            -Pinstaller,windows-installer
      - name: Push PR Docker image
        # This is only done on PR, as master is pushed with mvn deploy in "Deploy artifacts to server repository"
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          cd jahia-pack-repo/docker-jahia/
          mvn -U -ntp -s ../.github/maven.settings.xml -e \
            -Dparent.tag=${{steps.tags.outputs.parent_tag}} \
            -Dimage.tag=${{steps.tags.outputs.image_tag}} \
            deploy \
            -Pdocker-plugin

      - name: Store docker image
        shell: bash
        run: |
          docker images ls
          docker save -o jahia-pack-repo/image.tar ghcr.io/jahia/jahia-opencore-dev:${{steps.tags.outputs.image_tag}}

      - name: Copy artifacts
        if: ${{ needs.vars.outputs.parent_image_tag == 'none' }}
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/jahia-pack-repo/artifacts/
          if [ "none" = "${{ needs.vars.outputs.parent_image_tag }}"]; then
            cp ${{ github.workspace }}/jahia-pack-repo/jahia-installer-package/target/*.jar ${{ github.workspace }}/artifacts/
            cp ${{ github.workspace }}/jahia-pack-repo/jahia-installer-package/target/*.exe ${{ github.workspace }}/artifacts/
            cp ${{ github.workspace }}/jahia-pack-repo/jahia-installer-package/target/*db-scripts.zip ${{ github.workspace }}/artifacts/
          fi

      - name: Display size of the folders to be persisted (for space optimization)
        shell: bash
        run: |
          echo "Size of jahia-installer-package/target/"
          du -h -d 1 jahia-pack-repo/jahia-installer-package/target/
          echo "Size of ./"
          du -h -d 1 ./

      - name: Display content of the folders to be persisted in workspace
        shell: bash
        run: |
          echo "Listing of jahia-installer-package/target/"
          ls -lah jahia-pack-repo/jahia-installer-package/target/
          echo "Listing of ./"
          ls -lah ./

      - uses: jahia/jahia-modules-action/slack-jahia@v2
        if: ${{ failure() }}
        with:
          job-event: "fail"
          skip-docker: true
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_TEAM_PRODUCT_SNAPSHOTS_NOTIFICATIONS }}

  # It appears that a workflow cache generated in a Github hosted runner is
  # not available on a self-hosted runner. This step is only there to make the
  # docker artifact available to the self-hosted runner. This is in a dedicated job,
  # instead of a step, to allow the code-sign action to start earlier.
  expose-docker-artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Save/Restore build artifacts from cache
        uses: actions/cache@v4
        with:
          key: run-${{ github.run_id }}
          path: |
            jahia-pack-repo/jahia-installer-package/target/Jahia-*Distribution*
            ${{ github.workspace }}/jahia-pack-repo/artifacts/*
            jahia-pack-repo/image.tar
            jahia-pack-repo/image.tag
      - uses: actions/upload-artifact@v4
        with:
          name: jahia-pack-docker-artifacts
          retention-days: 1
          path: |
            jahia-pack-repo/image.tar
            jahia-pack-repo/image.tag

  sonar:
    runs-on: ubuntu-latest
    needs: [ vars, build ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.workflows-ref }}
          repository: Jahia/jahia-pack-private
          path: jahia-pack-repo
          token: ${{ secrets.GH_API_TOKEN }}
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8
      - name: Save/Restore build artifacts from cache
        uses: actions/cache@v4
        with:
          key: run-${{ github.run_id }}
          path: |
            jahia-pack-repo/jahia-installer-package/target/Jahia-*Distribution*
            ${{ github.workspace }}/jahia-pack-repo/artifacts/*
            jahia-pack-repo/image.tar
            jahia-pack-repo/image.tag
      - name: Set environment variables
        shell: bash
        run: |
          echo "SONAR_URL=${{ secrets.SONAR_URL }}" >> $GITHUB_ENV
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> $GITHUB_ENV
          echo "NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV
      - name: Analyze pull request with sonar
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          ls -al
          cd jahia-pack-repo/
          ls -al
          mvn -s .github/maven.settings.xml sonar:sonar -Dsonar.pullrequest.branch=${{ steps.branch-name.outputs.current_branch }} \
          -Dsonar.pullrequest.key=${{ github.run_id }} \
          -Dsonar.pullrequest.base=${{ needs.vars.outputs.target_branch }} \
          -Dsonar.pullrequest.github.repository=${{ github.event.repository.name }}
      - name: Sonar analysis
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        env:
          DEPENDENCY_CHECK_SETTINGS: -DfailOnError=false -DskipProvidedScope=true -DskipTestScope=true -DskipSystemScope=true
            -DnodeAnalyzerEnabled=false -DassemblyAnalyzerEnabled=false -Dformats=HTML,JSON
            -Dsonar.dependencyCheck.jsonReportPath=target/dependency-check-report.json
            -Dsonar.dependencyCheck.htmlReportPath=target/dependency-check-report.html
            -DdataDirectory=~/.owasp/dependency-check-data
            -DsuppressionFile=https://raw.githubusercontent.com/Jahia/jahia/master/.owasp/suppressions.xml
        run: |
          cd jahia-pack-repo/
          if [[ "${{ steps.branch-name.outputs.current_branch }}" == "master" ]];
          then
            mvn -s .github/maven.settings.xml dependency-check:aggregate sonar:sonar \
                $DEPENDENCY_CHECK_SETTINGS
          else
            mvn -s .github/maven.settings.xml dependency-check:aggregate sonar:sonar \
                -Dsonar.branch.name=$CIRCLE_BRANCH $DEPENDENCY_CHECK_SETTINGS
          fi

  call-workflow-jahia-ee:
    needs: [ build ]
    uses: Jahia/jahia-ee/.github/workflows/do-it-all.yml@master
    if: ${{ github.event_name != 'pull_request' }}
    secrets: inherit
    with:
      parent_image_tag: ${{ needs.build.outputs.image_tag }}
      target_branch: ${{ github.ref_name }}
      triggered_by: ${{ needs.build.outputs.triggered_by }}
      workflows-ref:  ${{ github.ref_name }}
